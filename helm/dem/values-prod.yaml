global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}

enabled: true
environment: production
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30018
resetOnConfigChange: true

cloudProvider:
  dockerRegistryUrl: acrarolibotnonprod.azurecr.io
  imagePullSecretName: 'acr-registry'
  flavor: openshift

authentication:
  jwtPublicKeySecretName: map-colonies-jwks
  ca:
    enabled: false
    useExternal: false
    externalSecretName: ''
    path: '/usr/local/share/ca-certificates'
    key: 'ca.crt'
  ssl:
    enabled: false
    useExternal: false
    externalSecretName: ''
  opa:
    enabled: true
    customHeaderName: "x-api-key"
  cors:
    enabled: true
    allowedOrigin: '*'
    allowedHeaders: ''
  db:
    requirePassword: true
    useExternal: true
    externalSecretName: 'pycsw-postgres-secret'
    sslEnabled: false
    caFileKey: "caFile"
    certFileKey: "certFile"
    keyFileKey: "keyFile"

image:
  repository: pycsw
  tag: v4.3.7

env:
  port: 8080
  targetPort: 8000 # To pycsw itself
  protocol: TCP
  loglevel: WARNING
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
  maxrecords: null #10000 for innet1
  logfile: '' #/var/log/pycsw/pycsw.log for innet1
  profiles: mc_3d
  # should be false for PYCSW-ALL!!
  filter_repository: true
  logFormat: >-
    %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"
    %({x-forwarded-for}i)s %(L)s
  uwsgi:
    processes: 6
    threads: 10
  tracing:
    enabled: false
    url: http://localhost:55681/v1/trace
  metrics:
    enabled: false
    url: http://localhost:55681/v1/metrics

db:
  host: 10.0.4.4
  name: 3d-catalog-manager-int
  schema: public
  port: 5432

resources:
  enabled: true
  value:
    limits:
      cpu: 400m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 1Gi

nginx:
  enabled: true
  replicaCount: 1
  image:
    repository: nginx
    tag: 'merge'
  port: 8080
  internalPort: 80
  nodePort: 30001
  resources:
    enabled: true
    value:
      limits:
        cpu: 400m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 200Mi

opa:
  image: openpolicyagent/opa
  imageTag: 0.29.4-envoy-3
  port: 9191
  enableLogging: false
  resources:
    enabled: true
    value:
      limits:
        cpu: 400m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 200Mi
envoy:
  image: envoyproxy/envoy
  imageTag: v1.20.7
  port: 6565
  maxRequestBytes: 8192
  requestedDomain: 3D
  resources:
    enabled: true
    value:
      limits:
        cpu: 400m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 200Mi

route:
  enabled: true
  https: true
  host:
  path: /api/3d/v1
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)
  useCert: false

ingress:
  enabled: false
  type: nginx-org # supported values: 'nginx-org' | 'nginx-kubernetes'
  tls:
    enabled: false
    useExternal: ''
  host:
  path: /api/3d/v1

annotations:
  collectord.io/index: SPLUNK_INDEX
  collectord.io/logs-output: splunk
  collectord.io/procstats-output: devnull
  collectord.io/netstats-output: devnull
  collectord.io/nettable-output: devnull
  collectord.io/stats-output: devnull

logsFilebeat:
  enabled: true #should be true in innet1
  filebeatImage: docker.elastic.co/beats/filebeat:7.12.1
  pycswMountPath: /var/log/pycsw
  nginxMountPath: /var/log/nginx
