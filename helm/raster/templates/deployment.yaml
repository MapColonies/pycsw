{{- $releaseName := .Release.Name -}}
{{- $chartName := include "pycsw.name" . -}}
{{- $configmapName := include "configmap.fullname" . }}
{{- $deploymentName := include "deployment.fullname" . }}
{{- $cloudProviderFlavor := include "pycsw.cloudProviderFlavor" . -}}
{{- $cloudProviderDockerRegistryUrl := include "pycsw.cloudProviderDockerRegistryUrl" . -}}
{{- $cloudProviderImagePullSecretName := include "pycsw.cloudProviderImagePullSecretName" . -}}
{{- $db := (include "common.db.merged" .) | fromYaml }}
{{ $sslSecretName := ternary .Values.authentication.ssl.externalSecretName (printf "%s%s" .Release.Name "-open-ssl") .Values.authentication.ssl.useExternal }}
{{ $postgresSecretName := ternary $db.secrets.externalSecretName (printf "%s%s" .Release.Name "-postgres-secret") $db.secrets.useExternal }}
{{- $imageTag := include "pycsw.tag" . -}}

{{- if .Values.enabled -}}

{{- if .Values.authentication.ssl.enabled }}
{{- if and .Values.authentication.ssl.useExternal (not .Values.authentication.ssl.externalSecretName) }}
{{- fail "When using external ssl secret the value for .Values.authentication.ssl.externalSecretName should be set" }}
{{- end }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deploymentName }}
  labels:
    app: {{ $chartName }}
    component: {{ $chartName }}
    environment: {{ include "pycsw.environment" . }}
    release: {{ $releaseName }}
    {{- include "pycsw.labels" . | nindent 4 }}
  annotations:
    collectord.io/index: {{ quote .Values.splunkIndex }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $chartName }}
      release: {{ $releaseName }}
      run: {{ $releaseName }}-{{ $chartName }}
      {{- include "pycsw.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ $chartName }}
        release: {{ $releaseName }}
        run: {{ $releaseName }}-{{ $chartName }}
        {{- include "pycsw.selectorLabels" . | nindent 8 }}
      annotations:
        {{- if .Values.resetOnConfigChange }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.env.metrics.enabled }}
        prometheus.io/port: {{ .Values.env.metrics.prometheus.port | quote }}
        prometheus.io/scrape: {{ .Values.env.metrics.prometheus.scrape | quote }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
    {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
    {{- end }}
      containers:
        - name: {{ $releaseName }}
          {{- with .Values.image }}
          image: {{ $cloudProviderDockerRegistryUrl }}{{ .repository }}:{{ $imageTag }}
          {{- end }}
          volumeMounts:
            {{- if .Values.global.ca.secretName }}
            - mountPath: {{ printf "%s/%s" .Values.global.ca.path .Values.global.ca.key | quote }}
              name: root-ca
              subPath: {{ quote .Values.caKey }}
            {{- end }}
            {{- if .Values.global.ca.secretName }}
            - name: root-ca
              mountPath: "/usr/local/share/ca-certificates"
            {{- end }}
            {{- if .Values.authentication.ssl.enabled }}
            - name: open-ssl
              mountPath: "/etc/ssl/openssl.cnf"
              subPath: "openssl.cnf"
            {{- end }}
            - name: pyscw-config
              mountPath: /etc/pycsw/pycsw.cfg
              subPath: pycsw.cfg
            - name: pyscw-mappings
              mountPath: /etc/pycsw/mappings.py
              subPath: mappings.py
            - mountPath: "/pycsw/uwsgi.ini"
              name: uwsgi-config
              subPath: uwsgi.ini
            {{- if $db.sslEnabled }}
            {{- if $db.secrets.caFileKey }}
            - name: ca-file
              mountPath: /certs/ca.crt
              subPath: ca.pem
            {{- end }}
            {{- if $db.secrets.keyFileKey }}
            - name: key-file
              mountPath: /certs/key.pem
              subPath: key.pem
            {{- end }}
            {{- if $db.secrets.certFileKey }}
            - name: cert-file
              mountPath: /certs/cert.pem
              subPath: cert.pem
            {{- end }}
            {{- end }}
          env:
            {{- if .Values.global.ca.secretName }}
            - name: REQUESTS_CA_BUNDLE
              value: {{ printf "%s/%s" .Values.caPath .Values.caKey | quote }}
            - name: NODE_EXTRA_CA_CERTS
              value: {{ printf "%s/%s" .Values.caPath .Values.caKey | quote }}
            {{- end }}
            - name: PYCSW_SERVER_URL
              value: http://localhost:8000
            - name: PYCSW_MAPPINGS_FILEPATH
              value: /etc/pycsw/mappings.py
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ $postgresSecretName }}
                  key: username
            {{- if .Values.env.db.requirePassword }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $postgresSecretName }}
                  key: password
            {{- end }}
            - name: POSTGRES_CERTS_MOUNT_PATH
              value: /certs
            - name: POSTGRES_CERT_FILE_NAME
              value: cert.pem
            - name: POSTGRES_KEY_FILE_NAME
              value: key.pem
          envFrom:
            - configMapRef:
                name: {{ $configmapName }}
          ports:
            - name: http
              containerPort: {{ .Values.pycswPort }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /csw?service=CSW&request=GetCapabilities&version=3.0.0
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 5
          {{- if .Values.resources.enabled }}
          resources:
            {{- toYaml .Values.resources.value | nindent 12 }}
          {{- end }}
        ################################################## uwsgi exporter deployment##############################################
        {{- if .Values.env.metrics.enabled }}
        {{- template "pycsw-chart.uwsgi-exporter-container" (merge (dict "releaseName" .releaseName "chartName" .chartName "cloudProviderDockerRegistryUrl" $cloudProviderDockerRegistryUrl "resources" .Values.uwsgiExporter.resources) .) }}
        {{- end }}
      volumes:
        {{- if .Values.global.ca.secretName }}
        - name: root-ca
          secret:
            secretName: {{ .Values.global.ca.secretName }}
        {{- end }}
        {{- if .Values.authentication.ssl.enabled }}
        - name: open-ssl
          secret:
            secretName: {{ $sslSecretName }}
        {{- end }}
        - name: pyscw-config
          configMap:
              name: {{ $configmapName }}
              items:
              - key: "pycsw.cfg"
                path: "pycsw.cfg"
        - name: pyscw-mappings
          configMap:
              name: {{ $configmapName }}
              items:
              - key: "mappings.py"
                path: "mappings.py"
        - name: uwsgi-config
          configMap:
            name: {{ $configmapName }}
            items:
            - key: "uwsgi.ini"
              path: "uwsgi.ini"
        {{- if $db.sslEnabled }}
        {{- if $db.secrets.caFileKey }}
        - name: ca-file
          secret:
            secretName: {{ $postgresSecretName }}
            items:
              - key: {{ $db.secrets.caFileKey }}
                path: ca.pem
        {{- end }}
        {{- if $db.secrets.keyFileKey }}
        - name: key-file
          secret:
            secretName: {{ $postgresSecretName }}
            items:
              - key: {{ $db.secrets.keyFileKey }}
                path: key.pem
        {{- end }}
        {{- if $db.secrets.certFileKey }}
        - name: cert-file
          secret:
            secretName: {{ $postgresSecretName }}
            items:
              - key: {{ $db.secrets.certFileKey }}
                path: cert.pem
        {{- end }}
        {{- end }}
{{- end -}}
