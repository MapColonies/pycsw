{{- if .Values.nginx.enabled -}}
{{- $chartName := include "pycsw.name" . -}}
{{- $cloudProviderDockerRegistryUrl := include "pycsw.cloudProviderDockerRegistryUrl" . -}}
{{- $cloudProviderImagePullSecretName := include "pycsw.cloudProviderImagePullSecretName" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nginx-deployment
  annotations: 
    collectord.io/index: {{ quote .Values.splunkIndex }}
  labels:
    app: {{ .Release.Name }}-{{ $chartName }}
    component: nginx-deployment
    environment: {{ .Values.environment }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ $chartName }}
      release: {{ .Release.Name }}
      run: {{ .Release.Name }}-nginx
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ $chartName }}
        release: {{ .Release.Name }}
        run: {{ .Release.Name }}-nginx
      # Autodiscover annotations should be here
      # https://github.com/elastic/beats/issues/7914
      annotations:
        co.elastic.logs/enabled: 'true'
        co.elastic.logs/module: 'nginx'
        co.elastic.logs/fileset.stdout: 'access'
        co.elastic.logs/fileset.stderr: 'error'
        {{- if .Values.resetOnConfigChange }}
        checksum/nginx-configmap: {{ include (print $.Template.BasePath "/nginx-configmap.yaml") . | sha256sum }}
        {{- end }}
    spec:
    {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
    {{- end }}
      volumes:
        - name: auth-js
          configMap:
            name: {{ .Release.Name  }}-nginx-configmap
            items:
            - key: "AUTH_JS"
              path: "auth.js"
        - name: nginx-config
          configMap:
            name: {{ .Release.Name }}-nginx-configmap
            items:
            - key: "NGINX_CONFIG"
              path: "nginx.conf"
        - name: nginx-root-config
          configMap:
            name: {{ .Release.Name }}-nginx-configmap
            items:
            - key: "NGINX_ROOT_CONFIG"
              path: "nginx.conf"
      containers:
        ## Nginx Deployment
        - name: {{ .Release.Name }}-nginx
          {{- with .Values.nginx.image }}
          image: {{ $cloudProviderDockerRegistryUrl }}{{ .repository }}:{{ .tag }}
          {{- end }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
          - name: DOMAIN
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-nginx-configmap
                key: DOMAIN
          volumeMounts:
          - mountPath: "/etc/nginx/auth.js"
            name: auth-js
            subPath: auth.js
            readOnly: true
          - mountPath: "/etc/nginx/conf.d"
            name: nginx-config
            readOnly: true
          - mountPath: "/etc/nginx/nginx.conf"
            name: nginx-root-config
            subPath: nginx.conf
            readOnly: true
          ports:
            - name: http
              containerPort: {{ .Values.nginx.targetPort }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            httpGet:
              path: /liveness
              port: {{ .Values.nginx.targetPort }}
          {{- if .Values.nginx.resources.enabled }}
          resources:
            {{- toYaml .Values.nginx.resources.value | nindent 12 }}
          {{- end }}
{{- end }}
