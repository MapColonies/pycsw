global:
  cloudProvider:
    dockerRegistryUrl: ""
    imagePullSecretName: ""
    flavor: openshift
  tracing: {}
  metrics: {}
  environment: ""
  opalaEnabled: false
  ca:
    secretName: ""
    path: "/usr/local/share/ca-certificates"
    key: "ca.crt"
  db:
    host: ""
    name: ""
    port: 5432
    sslEnabled: false
    rejectUnauthorized: false
    secrets:
      useExternal: true
      externalSecretName: "raster-dev-postgres-secret"
      caFileKey: ""
      certFileKey: ""
      keyFileKey: ""
  mcLabelsAndAnnotations:
    environment: "development"

mcLabelsAndAnnotations:
  owner: 'raster'
  component: backend
  partOf: raster-serving

enabled: true
environment: development
replicaCount: 5
initialDelaySeconds: 60
resetOnConfigChange: true
splunkIndex: ""
imagePullPolicy: Always

cloudProvider:
  dockerRegistryUrl: ""
  imagePullSecretName: ""
  flavor: openshift

authentication:
  ssl:
    enabled: false
    useExternal: false
    externalSecretName: ""
db:
  host: ""
  name: ""
  port: 5432
  sslEnabled: false
  rejectUnauthorized: false
  secrets:
    useExternal: false
    externalSecretName: ""
    caFileKey: ""
    certFileKey: ""
    keyFileKey: ""

image:
  repository: pycsw
  tag: "latest"

internalServicePort: 80
pycswPort: 8000
nodePort: 30018
servicePort: 8080

# add pod annotations
# example:
# podAnnotations:
# annotation1: annotation-value-1
# annotation2: annotation-value-2
podAnnotations: {}

filterProductStatus: false

env:
  loglevel: WARNING
  maxrecords: null
  bboxPrecisionDigits: 10
  logfile: ""
  profiles: mc_raster
  logFormat: >-
    %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" %({x-forwarded-for}i)s %(L)s
  uwsgi:
    processes: 6
    threads: 10
    statsServer:
      enabled: true
      stats: 1717
      statsMinify: true
  cors:
    enabled: true
    allowedOrigin: "*"
    allowedHeaders: "x-api-key"
  db:
    schema: RasterCatalogManager
    requirePassword: true
  tracing:
    enabled: false
    url: http://localhost:55681/v1/trace
  metrics:
    prometheus:
      scrape: true
      port: 9117
    enabled: true
    url: http://localhost:55681/v1/metrics

resources:
  enabled: true
  value:
    limits:
      cpu: 2
      memory: 1200Mi
    requests:
      cpu: 2
      memory: 1200Mi

nginx:
  enabled: true
  fullnameOverride: ""
  replicaCount: 2
  image:
    repository: nginx-otel-unprivileged
    tag: "v1.0.0"

  port: 8080
  internalServicePort: 80
  nginxTargetPort: 8080
  targetPort: 8080
  nodePort: 30003

  authorization:
    enabled: true
    domain: "raster"
    url: http://opa-dev-opa-service.infra-services/v1/data/http/authz/decision
    token:
      queryName: token

  extraVolumes:
  - name: nginx-config
    configMap:
      name: "{{ .Release.Name }}-pycsw-nginx-configmap"

  extraVolumeMounts:
  - name: nginx-config
    mountPath: "/etc/nginx/conf.d/default.conf"
    subPath: default.conf
  - mountPath: "/etc/nginx/nginx.conf"
    name: nginx-config
    subPath: nginx.conf
  - name: nginx-config
    mountPath: "/etc/nginx/log_format.conf"
    subPath: log_format.conf

  resources:
    enabled: true
    value:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

  route:
    enabled: true
    path: /api/raster/v1
    host:
    timeout:
      enabled: false # defaults to 30s by openshift
      duration: 60s # supported units (us, ms, s, m, h, d)
    tls:
      enabled: true
      useCerts: false
      certificate: ""
      key: ""
      caCertificate: ""

  ingress:
    enabled: false
    path: /api/raster/v1
    host: "localhost"
    tls:
      enabled: true
      useExternal: ""

uwsgiExporter:
  image:
    repository: "timonwong/uwsgi-exporter"
    tag: "latest"
  env:
    logLevel: info # one of [debug, info, warn, error]
  port: 9117
  resources:
    enabled: true
    value:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
