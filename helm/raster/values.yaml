global:
  cloudProvider: 
    dockerRegistryUrl: my-registry-url.io
    imagePullSecretName: 'my-registry-secret'
    flavor: openshift
  tracing: {}
  metrics: {}
  environment: {}
  authentication:
    jwtPublicKeySecretName: map-colonies-jwks

enabled: true
environment: development
replicaCount: 5
initialDelaySeconds: 60
resetOnConfigChange: true
splunkIndex: ''
imagePullPolicy: Always

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

authentication:
  ca:
    enabled: false
    useExternal: false
    externalSecretName: ''
  ssl:
    enabled: false
    useExternal: false
    externalSecretName: ''

caSecretName: ''
caPath: '/usr/local/share/ca-certificates'
caKey: 'ca.crt'

rasterCommon:
  authentication:
    opa:
      enabled: true
      customHeaderName: "x-api-key,content-type"
  ca:
    secretName: ''
    path: '/usr/local/share/ca-certificates'
    key: 'ca.crt'
  db:
    host: "localhost"
    name: "raster"
    port: 5432
    sslEnabled: false
    rejectUnauthorized: true
    secrets:
      useExternal: true
      externalSecretName: ''
      caFileKey: "caFileKey"
      certFileKey: "certFileKey"
      keyFileKey: "keyFileKey"


image:
  repository: pycsw
  tag: 'latest'


internalServicePort: 80
pycswPort: 8000
nodePort: 30018
servicePort: 8080

env:
  loglevel: WARNING
  maxrecords: null
  logfile: ''
  profiles: mc_raster
  logFormat: >-
    %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"
    %({x-forwarded-for}i)s %(L)s
  uwsgi:
    processes: 6
    threads: 10
  cors:
    enabled: true
    allowedOrigin: '*'
    allowedHeaders: ''
  db:
    schema: RasterCatalogManager
    requirePassword: true
  tracing:
    enabled: false
    url: http://localhost:55681/v1/trace
  metrics:
    enabled: false
    url: http://localhost:55681/v1/metrics

resources:
  enabled: true
  value:
    limits:
      cpu: 2
      memory: 1200Mi
    requests:
      cpu: 2
      memory: 1200Mi

nginx:
  enabled: true
  replicaCount: 2
  image:
    repository: nginx-otel-unprivileged
    tag: 'v1.0.0' 
  port: 8080
  internalServicePort: 80
  targetPort: 8080
  servicePort: 8080
  nodePort: 30001
  
  authorization:
    enabled: true
    domain: 'raster'
    url: http://opa-la-opa-service.integration/v1/data/http/authz/decision

  extraVolumes:
    - name: nginx-config
      configMap:
        name: '{{ .Release.Name }}-nginx-configmap'

  extraVolumeMounts: 
    - name: nginx-config
      mountPath: "/etc/nginx/conf.d/default.conf"
      subPath: default.conf
    - mountPath: "/etc/nginx/nginx.conf"
      name: nginx-config
      subPath: nginx.conf

  resources:
    enabled: true
    value:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi     

  route:
    enabled: true
    path: /api/raster/v1
    host: 
    timeout:
      enabled: false # defaults to 30s by openshift
      duration: 60s # supported units (us, ms, s, m, h, d)
    tls:
      enabled: true
      useCerts: false
      certificate: ''
      key: ''
      caCertificate: ''

  ingress:
    enabled: false
    path: /api/raster/v1
    host: 'localhost'
    tls: 
      enabled: true
      useExternal: ''
