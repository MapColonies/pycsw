
{{- $chartName := include "pycsw.name" . -}}
{{- $serviceName := include "service.fullname" . -}}
{{- $releaseName := .Release.Name -}}

map $msec $nanosec {
    "~*(\d{10})\.(\d{3})" "$1$2000000";
}

upstream pycsw {
    server {{ $serviceName }}:{{ .Values.servicePort }};
}

js_import main from "/etc/nginx/jwt.js";
js_set $jwt_payload_sub main.jwt_payload_sub;

server {
    listen      {{ .Values.nginx.targetPort }};
    # the domain name it will serve for
    server_name pycsw;
    # max upload size, adjust to taste
    keepalive_timeout  500;
    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    send_timeout                600;
    client_max_body_size        5000;
    client_header_timeout       600;
    client_body_timeout         600;
    client_header_buffer_size   12288; # 12K
    large_client_header_buffers 4 12288; # 12K
    fastcgi_read_timeout        300;
    location /liveness {
        return 200 "I'm alive\n";
    }
    location / {
        include uwsgi_params;
        uwsgi_pass pycsw;
        proxy_hide_header       Set-Cookie;  # ensures the header will not be passed back to the client
        proxy_hide_header       Cookie;  # ensures the header will not be passed back to the client
        proxy_set_header Cookie ""; # ensures that a client cannot pass any prior cookies to the webapp and spoil your cache
    }
}
