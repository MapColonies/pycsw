name: Match chart version and push to ACR

on:
  push:
    tags:
      - 'v*'

  workflow_dispatch:
    inputs:
      version:
        required: false
        type: string
env:
  HELM_EXPERIMENTAL_OCI: 1

permissions:
  contents: write
  pull-requests: write

jobs:
  build_and_push_docker:
    runs-on: ubuntu-latest
    env:
      Docker_Repository: ${{ secrets.ACR_URL }}/${{ github.event.repository.name }}:${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v2
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_URL }}
          username: ${{ secrets.ACR_PUSH_USER }}
          password: ${{ secrets.ACR_PUSH_TOKEN }}
      - name: downcase repository
        run: |
          echo "Docker_Repository=${Docker_Repository,,}" >>${GITHUB_ENV}
      - run: docker build . -t ${{ env.Docker_Repository }}
      - run: docker push ${{ env.Docker_Repository }}

  build_and_push_helm:
    name: publish 3D pycsw helm to acr
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        helm: [{domain: 3d, context: ./helm/3d}, {domain: dem, context: ./helm/dem}, {domain: raster, context: ./helm/raster}]
    steps:    
      - name: checkout repo from latest commit
        uses: actions/checkout@v4

      - name: Artifactory Login
        uses: MapColonies/shared-workflows/actions/artifactory-login@artifactory-login-v1
        with:
          registry: ${{ secrets.ACR_URL }}
          username: ${{ secrets.ACR_PUSH_USER }}
          password: ${{ secrets.ACR_PUSH_TOKEN }}

      - name: Build and Push Helm Chart
        uses: MapColonies/shared-workflows/actions/build-and-push-helm@build-and-push-helm-v1.0.1
        with:
          context: ${{ matrix.helm.context }}
          domain: ${{ matrix.helm.domain }}
          registry: ${{ secrets.ACR_URL }}

      - name: Update Helm Package in artifacts.json
        uses: MapColonies/shared-workflows/actions/update-artifacts-file@update-artifacts-file-v1
        with:
          domain: ${{ matrix.helm.domain }}
          type: helm
          artifact_name: ${{ steps.build_helm_chart.outputs.chart }}
          artifact_tag: ${{ steps.build_helm_chart.outputs.ver }}
          registry: ${{ secrets.ACR_URL }}
          github_token: ${{ secrets.GH_PAT }}

