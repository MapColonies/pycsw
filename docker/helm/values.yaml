route: 
  tls: false
postgres:
  db_name: pycsw-3d-dev
  host: 10.8.1.15
  authentication:
    username: postgres
    password: postgres
pycsw:
  image: acrarolibotnonprod.azurecr.io/pycsw:v1.0.2-rc-profile
  pycsw_cfg: |+
    [server]
    home=/home/pycsw
    url=http://localhost:8000
    mimetype=application/xml; charset=UTF-8
    encoding=UTF-8
    language=en-US
    maxrecords=10
    loglevel=DEBUG
    logfile=
    #ogc_schemas_base=http://foo
    #federatedcatalogues=http://catalog.data.gov/csw
    #pretty_print=true
    #gzip_compresslevel=8
    #domainquerytype=range
    #domaincounts=true
    #spatial_ranking=true
    profiles=mc3d

    [manager]
    transactions=false
    allowed_ips=127.0.0.1
    #csw_harvest_pagesize=10

    [metadata:main]
    identification_title=pycsw Geospatial Catalogue
    identification_abstract=pycsw is an OGC CSW server implementation written in Python
    identification_keywords=catalogue,discovery,metadata
    identification_keywords_type=theme
    identification_fees=None
    identification_accessconstraints=None
    provider_name=Organization Name
    provider_url=https://pycsw.org/
    contact_name=Lastname, Firstname
    contact_position=Position Title
    contact_address=Mailing Address
    contact_city=City
    contact_stateorprovince=Administrative Area
    contact_postalcode=Zip or Postal Code
    contact_country=Country
    contact_phone=+xx-xxx-xxx-xxxx
    contact_fax=+xx-xxx-xxx-xxxx
    contact_email=Email Address
    contact_url=Contact URL
    contact_hours=Hours of Service
    contact_instructions=During hours of service.  Off on weekends.
    contact_role=pointOfContact

    [repository]
    # sqlite
    #database=sqlite:////home/pycsw/tests/functionaltests/suites/cite/data/cite.db
    # postgres
    database=${PYCSW_REPOSITORY_DATABASE_URI}
    # mysql
    #database=mysql://username:password@localhost/pycsw?charset=utf8
    mappings=${PYCSW_MAPPINGS_FILEPATH}
    table=records
    #filter=type = 'http://purl.org/dc/dcmitype/Dataset'

    [metadata:inspire]
    #enabled=true
    #languages_supported=eng,gre
    #default_language=eng
    #date=YYYY-MM-DD
    #gemet_keywords=Utility and governmental services
    #conformity_service=notEvaluated
    #contact_name=Organization Name
    #contact_email=Email Address
    #temp_extent=YYYY-MM-DD/YYYY-MM-DD

  # In order to change default db columns mapping
  mappings_py: |+
    MD_CORE_MODEL = {
        'typename': 'pycsw:CoreMetadata',
        'outputschema': 'http://pycsw.org/metadata',
        'mappings': {
            # Update of Nati
            # Needed fot PYCSW
            'pycsw:Identifier': 'identifier',
            'pycsw:Typename': 'typename',
            'pycsw:Schema': 'schema',
            'pycsw:MdSource': 'mdsource',
            'pycsw:InsertDate': 'insert_date',
            'pycsw:XML': 'xml',
            'pycsw:AnyText': 'anytext',
            'pycsw:BoundingBox': 'wkb_geometry',
            'pycsw:Title': 'title',
            'pycsw:AlternateTitle': 'title',
            'pycsw:Creator': 'producer_name',
            'pycsw:Abstract': 'description',
            'pycsw:Publisher': 'producer_name',
            'pycsw:Contributor': 'producer_name',
            'pycsw:Modified': 'update_date',
            'pycsw:Links': 'links',
            'pycsw:Date': 'creation_date',
            'pycsw:Type': 'type',
            'pycsw:Format': 'type',
            'pycsw:Keywords': 'keywords',
            'pycsw:Source': 'product_name',
            'pycsw:AccessConstraints': 'classification',
            'pycsw:CRS': 'srs',
            'pycsw:Relation': '',
            'pycsw:Language': '',
            'pycsw:Keywords': '',
            'pycsw:TopicCategory': '',
            # Profile 3D fields
            'pycsw:productId': 'product_id',
            'pycsw:productName': 'product_name',
            'pycsw:productVersion': 'product_version',
            'pycsw:productType': 'product_type',
            'pycsw:description': 'description',
            'pycsw:creationDate': 'creation_date',
            'pycsw:sourceDateStart': 'source_date_start',
            'pycsw:sourceDateEnd': 'source_date_end',
            'pycsw:minResolutionMeter': 'min_resolution_meter',
            'pycsw:maxResolutionMeter': 'max_resolution_meter',
            'pycsw:nominalResolution': 'nominal_resolution',
            'pycsw:maxAccuracyCE90': 'max_accuracy_CE90',
            'pycsw:absoluteAccuracyLEP90': 'absolute_accuracy_LEP90',
            'pycsw:accuracySE90': 'accuracy_SE90',
            'pycsw:relativeAccuracyLEP90': 'relative_accuracy_LEP90',
            'pycsw:visualAccuracy': 'visual_accuracy',
            'pycsw:sensors': 'sensors',
            'pycsw:footprint': 'footprint',
            'pycsw:heightRangeFrom': 'height_range_from',
            'pycsw:heightRangeTo': 'height_range_to',
            'pycsw:srsId': 'srs_id',
            'pycsw:srsName': 'srs_name',
            'pycsw:srsOrigin': 'srs_origin',
            'pycsw:region': 'region',
            'pycsw:classification': 'classification',
            'pycsw:compartmentalization': 'compartmentalization',
            'pycsw:productionSystem': 'production_system',
            'pycsw:producerName': 'producer_name',
            'pycsw:productionMethod': 'production_method',
            'pycsw:minFlightAlt': 'min_flight_alt',
            'pycsw:maxFlightAlt': 'max_flight_alt',
            'pycsw:geographicArea': 'geographic_area',
            'pycsw:productBoundingBox': 'product_bounding_box'
        }
    }
